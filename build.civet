#!/usr/bin/env civet
"civet autoLet"

{ globSync } := require 'glob'
path := require 'path'
fs := require 'fs'
pug := require 'pug'
stylus := require 'stylus'
civet := require '@danielx/civet'

throw_err = (err) => if (err) throw err

to_target = (base, ext) => 'frist.io/' + base + '.' + ext

log_if_unchanged = (src, dst) =>
  if fs.existsSync(dst) and fs.statSync(src).mtime < fs.statSync(dst).mtime
    console.log src + ' unchanged, skipping...'
    return true
  return false

log_write = (src, dst) => console.log src + ' -> ' + dst

ext_map :=
  civet: 'js'
  pug: 'html'
  styl: 'css'

transpilers :=
  civet: (fn, base, target) =>
    fs.readFile fn, encoding: 'utf8', flag: 'r', (err, data) =>
      throw_err err
      fs.writeFile
        target
        civet.compile(data, js: true)
        throw_err
  pug: (fn, base, target) =>
    fs.writeFile
      target
      pug.renderFile fn, cache: true, pretty: true
      throw_err
  styl: (fn, base, target) =>
    fs.readFile fn, encoding: 'utf8', flag: 'r', (err, data) =>
      throw_err err
      stylus.render data, filename: base + '.css', (err, css) =>
        throw_err err
        fs.writeFile target, css, throw_err


for fn of globSync('src/*')
  file_ = path.parse(fn)
  base = file_.name
  ext = file_.ext.split('.')[1]
  target = to_target base, ext_map[ext]
  if log_if_unchanged fn, target then continue
  transpilers[ext](fn, base, target)
  log_write fn, target
