#!/usr/bin/env civet
"civet autoLet"

{ globSync } := require 'glob'
path := require 'path'
fs := require 'fs'
pug := require 'pug'
stylus := require 'stylus'
civet := require '@danielx/civet'

throw_err = (err) => if (err) throw err

to_target = (base, ext) => 'frist.io/' + base + '.' + ext


for fn of globSync('src/*.pug')
  base = path.parse(fn).name
  fs.writeFile
    to_target base, 'html'
    pug.renderFile fn, cache: true, pretty: true
    throw_err

for fn of globSync('src/*.styl')
  base = path.parse(fn).name
  fs.readFile fn, encoding: 'utf8', flag: 'r', (err, data) =>
    throw_err err
    stylus.render data, filename: base + '.css', (err, css) =>
      throw_err err
      fs.writeFile to_target(base, 'css'), css, throw_err

for fn of globSync('src/*.civet')
  base = path.parse(fn).name
  fs.readFile fn, encoding: 'utf8', flag: 'r', (err, data) =>
    throw_err err
    fs.writeFile
      to_target(base, 'js')
      civet.compile(data, js: true)
      throw_err
